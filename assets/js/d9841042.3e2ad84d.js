"use strict";(self.webpackChunkcodecookbook=self.webpackChunkcodecookbook||[]).push([[458],{7759:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(7294),i=n(6292),o=n(3441);const r=e=>{let{slug:t}=e;return a.createElement(i.Z,{variant:"contained",startIcon:a.createElement(o.Z,null),href:`https://shop.codecookbook.io/l/${t}`,target:"_blank"},"Download Code")}},5613:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>k,frontMatter:()=>r,metadata:()=>s,toc:()=>u});var a=n(7462),i=(n(7294),n(3905)),o=n(7759);const r={sidebar_position:2},l="Social Authentication",s={unversionedId:"users-auth/social",id:"users-auth/social",title:"Social Authentication",description:"This recipe will show you how to use social providers like Google, Facebook and more to authenticate users. This recipe is an extension of the Username & Password recipe.",source:"@site/recipes/users-auth/social.mdx",sourceDirName:"users-auth",slug:"/users-auth/social",permalink:"/recipes/users-auth/social",draft:!1,editUrl:"https://github.com/code-cookbook/code-cookbook.github.io/tree/main/recipes/users-auth/social.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"recipeSidebar",previous:{title:"Username & Password",permalink:"/recipes/users-auth/username-password"}},d={},u=[{value:"Ingredients",id:"ingredients",level:2},{value:"Google Sign In",id:"google-sign-in",level:3},{value:"Considerations",id:"considerations",level:2},{value:"Outputs",id:"outputs",level:2},{value:"Screens",id:"screens",level:3},{value:"Endpoints",id:"endpoints",level:3},{value:"Tables",id:"tables",level:3},{value:"Method",id:"method",level:2},{value:"Login Screen",id:"login-screen",level:3},{value:"Logic",id:"logic",level:4},{value:"Token Endpoint",id:"token-endpoint",level:3},{value:"Request Body",id:"request-body",level:4},{value:"Logic",id:"logic-1",level:4},{value:"Response Body",id:"response-body",level:4},{value:"Further Reading",id:"further-reading",level:2},{value:"Ready-Made Code",id:"ready-made-code",level:2}],c={toc:u},p="wrapper";function k(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"social-authentication"},"Social Authentication"),(0,i.kt)("p",null,"This recipe will show you how to use social providers like Google, Facebook and more to authenticate users. This recipe is an extension of the ",(0,i.kt)("a",{parentName:"p",href:"/recipes/users-auth/username-password"},"Username & Password recipe"),"."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Looking for complete code samples? Check the ",(0,i.kt)("a",{parentName:"p",href:"#ready-made-code"},"ready made code")," section!")),(0,i.kt)("h2",{id:"ingredients"},"Ingredients"),(0,i.kt)("p",null,"Most social providers will require the following:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Use of their HTML/Javascript libraries"),(0,i.kt)("li",{parentName:"ol"},"Use of their server-side library"),(0,i.kt)("li",{parentName:"ol"},"A developer account and a client ID"),(0,i.kt)("li",{parentName:"ol"},"A configured OAuth Consent Screen")),(0,i.kt)("h3",{id:"google-sign-in"},"Google Sign In"),(0,i.kt)("p",null,"Below are links to the ",(0,i.kt)("strong",{parentName:"p"},"Sign in with Google")," versions of the above ingredients."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://developers.google.com/identity/gsi/web/guides/client-library"},"HTML/Javascript libraries")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://developers.google.com/api-client-library"},"Server-side libraries")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://developers.google.com/identity/gsi/web/guides/get-google-api-clientid"},"Account & OAuth Consent Screen setup guide"))),(0,i.kt)("h2",{id:"considerations"},"Considerations"),(0,i.kt)("p",null,"Social login is just another way of authenticating a user instead of using traditional methods like a username and password. Instead of checking the provided credentials against records in the database, you are trusting a third party to verify the user's credentials instead."),(0,i.kt)("p",null,"Because this now means a user can log in with several different methods, some additional complexity is introduced, in particular these scenarios:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Problem"),(0,i.kt)("th",{parentName:"tr",align:null},"Mitigation"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"A user registers using a social provider but later wants to sign in with a username/password"),(0,i.kt)("td",{parentName:"tr",align:null},"The user can trigger a reset password flow to create a password for their account.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"A user changes their email address"),(0,i.kt)("td",{parentName:"tr",align:null},"Social login will still work, but they will need to use an account that matches the new email address. The social account they previously used will no longer work")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"The social provider only returns name and email, more information needs to be captured on registration"),(0,i.kt)("td",{parentName:"tr",align:null},"A field (e.g ",(0,i.kt)("inlineCode",{parentName:"td"},"onboarded"),") can be added to the User database table. If set to ",(0,i.kt)("inlineCode",{parentName:"td"},"false"),", your app can force the user to complete an additional step before being able to log in.")))),(0,i.kt)("h2",{id:"outputs"},"Outputs"),(0,i.kt)("h3",{id:"screens"},"Screens"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Path"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Login"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"/login")),(0,i.kt)("td",{parentName:"tr",align:null},"Displays the social sign in buttons and redirects to the social provider login screen")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Dashboard"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"/")),(0,i.kt)("td",{parentName:"tr",align:null},"Only accessible if the user has a valid JWT issued. Fetches data from ",(0,i.kt)("inlineCode",{parentName:"td"},"GET /me"))))),(0,i.kt)("h3",{id:"endpoints"},"Endpoints"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Method"),(0,i.kt)("th",{parentName:"tr",align:null},"Path"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"POST"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"/auth/token")),(0,i.kt)("td",{parentName:"tr",align:null},"Verifies the token from the social provider and issues a JWT.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"GET"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"/me")),(0,i.kt)("td",{parentName:"tr",align:null},"Returns the current user's details, only if logged in")))),(0,i.kt)("h3",{id:"tables"},"Tables"),(0,i.kt)("mermaid",{value:"erDiagram\n  User {\n      int id PK\n      string email\n      string firstName\n      string lastName\n      string password\n      string createdAt\n      string updatedAt\n  }"}),(0,i.kt)("h2",{id:"method"},"Method"),(0,i.kt)("h3",{id:"login-screen"},"Login Screen"),(0,i.kt)("p",null,"The login page typically uses one of the social provider's Javascript SDKs"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Google")),(0,i.kt)("h4",{id:"logic"},"Logic"),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"The token issued by the social provider is NOT the same as the token generated by your backend. Your backend should exchange the social token for one you create yourself.")),(0,i.kt)("mermaid",{value:'%%{init: { "sequence": { "mirrorActors":false }}}%%\nsequenceDiagram\n    Frontend->>Frontend: User clicks login button\n    Frontend->>+Social: Redirect or popup\n    Social--\x3e>-Frontend: Redirect or callback\n    Note right of Frontend: Token sent back to frontend\n    Frontend->>+API: Login with token\n    Note right of API: See \'Social Endpoint\' logic below\n    API--\x3e>-Frontend: Token (201 Created)\n    Note right of Frontend: Browser stores token in cookie'}),(0,i.kt)("h3",{id:"token-endpoint"},"Token Endpoint"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"POST /auth/token")," endpoint accepts the token issued by the social provider and returns a JSON web token (JWT) which should be stored by the client for subsequent requests."),(0,i.kt)("h4",{id:"request-body"},"Request Body"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "type: "credentials",\n    "attributes": {\n      "provider": "google",\n      "token": {\n        "clientId": "719961940556-....apps.googleusercontent.com",\n        "client_id": "719961940556-....apps.googleusercontent.com",\n        "credential": "eyJhbGciOiJSUzI1NiIsImtpZ...eZv73XtATkZqlEN8z42_Yv4Xr8PwvvnzxKj7NzPkjgNwxvZHL88ari9Sg",\n        "select_by": "btn"\n      }\n    }\n  }\n}\n')),(0,i.kt)("h4",{id:"logic-1"},"Logic"),(0,i.kt)("mermaid",{value:'%%{init: { "sequence": { "mirrorActors":false }}}%%\nsequenceDiagram\n    Frontend->>+API: Login with token\n    API->>+Social: Validate token\n    Social--\x3e>-API: Success\n    API->>API: Handle new user registration\n    API->>+JWT: Create and sign new JWT\n    Note left of JWT: User ID and email in payload\n    JWT--\x3e>-API: Token\n    API--\x3e>-Frontend: Token (201 Created)'}),(0,i.kt)("h4",{id:"response-body"},"Response Body"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."\n}\n')),(0,i.kt)("h2",{id:"further-reading"},"Further Reading"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://developers.google.com/identity/gsi/web/guides/overview"},"Sign in with Google for Web"))),(0,i.kt)("h2",{id:"ready-made-code"},"Ready-Made Code"),(0,i.kt)("p",null,"Download this recipe as a complete application!"),(0,i.kt)(o.Z,{slug:"social-auth",mdxType:"GumroadButton"}))}k.isMDXComponent=!0}}]);